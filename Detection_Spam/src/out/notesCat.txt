Courriel_ID_test
Courriel_ID_training
Probability	
NB_Prediction	
Type_courriel_test
Lissage
this.statistics.add(new String[] {"Test_courriel_ID", "Probability", "NB_Prediction", "Type_courriel_test", "Lissage"});

KNN - Tester ma fonction
		CatalogManager manager = new CatalogManager();
		dictionnaire_Spam = manager.getMap("spam", 300);
        dictionnaire_Ham  = manager.getMap("ham", 300);
        test_set  = manager.getMap("test"); //MODIFIER: ajouter cette ligne

        
        a.traitementDeDonnees(dictionnaire_Ham, invertedIndex_Ham);
        a.traitementDeDonnees(dictionnaire_Spam, invertedIndex_Spam);
        
        
        
        System.out.println("kNN");
        KNN knn = new KNN(invertedIndex_Ham, invertedIndex_Spam);
		
		String courriel_ID_test, courriel_ID_Spam, courriel_ID_Ham; //get la clé (ID du courriel)
		ArrayList<String> tokensDuCourriel; //tokens du courriel
		String token, stemToken;

      //itérer à travers de chaque courriel du test set
  		for (Map.Entry mapElement : test_set.entrySet()) { 
              courriel_ID_test = (String)mapElement.getKey(); 
              tokensDuCourriel = test_set.get(courriel_ID_test); //arrayList avec tous les mots du courriel test
              
              for (Map.Entry mapElement2 : dictionnaire_Ham.entrySet()) {
            	  courriel_ID_Ham = (String)mapElement2.getKey(); 
            	  knn.getTable("ham",courriel_ID_test, courriel_ID_Ham, tokensDuCourriel, dictionnaire_Ham.get(courriel_ID_Ham));
  				
              }
              
              for (Map.Entry mapElement3 : dictionnaire_Spam.entrySet()) {
            	  courriel_ID_Spam = (String)mapElement3.getKey(); 
  				knn.getTable("spam", courriel_ID_test, courriel_ID_Spam, tokensDuCourriel, dictionnaire_Spam.get(courriel_ID_Spam));
  				
              }
  		}
  		
  		knn.exportCSV();
  		System.out.println("FINI");
  		
  		//HashMap<Set, Double> distance = knn.getDistance();
  		//System.out.println(distance.size());